"""
Django settings for bookingsystem project.

Generated by 'django-admin startproject' using Django 4.2.19.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
from django.templatetags.static import static
from django.urls import reverse_lazy
from django.utils.translation import gettext_lazy as _
from pathlib import Path
from dotenv import load_dotenv
import os

import os
from pathlib import Path

# Load .env files locally (optional)

load_dotenv()

BASE_DIR = Path(__file__).resolve().parent.parent

# -----------------------------
# SECRET KEY
# -----------------------------
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY")

# -----------------------------
# DEBUG
# -----------------------------
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(os.environ.get("DEBUG"))

# -----------------------------
# Allowed hosts
# -----------------------------
# 'DJANGO_ALLOWED_HOSTS' should be a single string of hosts with a , between each.
# For example: 'DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1,[::1]'
ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS","127.0.0.1").split(",")

# -----------------------------
# Database
# -----------------------------
DATABASES = {
     'default': {
         'ENGINE': 'django.db.backends.postgresql',
         'NAME': os.getenv('DATABASE_NAME'),
         'USER': os.getenv('DATABASE_USERNAME'),
         'PASSWORD': os.getenv('DATABASE_PASSWORD'),
         'HOST': os.getenv('DATABASE_HOST'),
         'PORT': os.getenv('DATABASE_PORT'),
     }
 }

# -----------------------------
# Static files
# -----------------------------
STATIC_URL = 'static/'

STATIC_ROOT = '/vol/web/static/' 


# Application definition

INSTALLED_APPS = [
    'rest_framework',
    'organization',
    'django.contrib.staticfiles',
    "unfold",  # before django.contrib.admin
    "unfold.contrib.filters",  # optional, if special filters are needed
    "unfold.contrib.forms",  # optional, if special form elements are needed
    "unfold.contrib.inlines",  # optional, if special inlines are needed
    "unfold.contrib.import_export",  # optional, if django-import-export package is used
    "unfold.contrib.guardian",  # optional, if django-guardian package is used
    "unfold.contrib.simple_history",  # optional, if django-simple-history package is used
    "unfold.contrib.location_field",  # optional, if django-location-field package is used
    "unfold.contrib.constance",  # optional, if django-constance package is used
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django_webpack_dev_server',
    'frontend',
    'core',
    'django_bootstrap5',
    'template_partials',
    'django_bootstrap_icons',
    'embed_video',
    'django_admin_listfilter_dropdown',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'



TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'core.wsgi.application'



# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'da-dk'
LANGUAGES = (
    ('da', 'Danish'),
    ('no', 'Norwegian'),
    ('en', 'English'),
)

TIME_ZONE = 'Europe/Copenhagen'
USE_L10N = True
USE_I18N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/





# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'




UNFOLD = {
    "SITE_TITLE": "Admin",
    "SITE_HEADER": "SKS Admin",
    "SITE_SUBHEADER": "- Med lort pÃ¥ styret",
    #"SITE_DROPDOWN": [
    #    {
    #        "icon": "diamond",
    #        "title": _("My site"),
    #        "link": "https://example.com",
    #    },
        # ...
    #],
    #"SITE_URL": "/",
    "SITE_SYMBOL": "mode_heat",  # symbol from icon set
    "SHOW_HISTORY": True, # show/hide "History" button, default: True
    "SHOW_VIEW_ON_SITE": True, # show/hide "View on site" button, default: True
    "SHOW_BACK_BUTTON": True, # show/hide "Back" button on changeform in header, default: False
    #"ENVIRONMENT": "sample_app.environment_callback",
    #"DASHBOARD_CALLBACK": "sample_app.dashboard_callback",

    "BORDER_RADIUS": "6px",
    "COLORS": {
        "primary": {
            50: "#FFF0EB",
            100: "#FFE2D6",
            200: "#FFC8B3",
            300: "#FFAB8A",
            400: "#FF8E61",
            500: "#FF733C",
            600: "#FF733C",
            700: "#FF733C",
            800: "#FA4700",
            900: "#BD3500",
            950: "#802400",
        },
    },
    "EXTENSIONS": {
        "modeltranslation": {
            "flags": {
                "dn": "ðŸ‡©ðŸ‡°",
                "en": "ðŸ‡¬ðŸ‡§",
            },
        },
    },
    "SIDEBAR": {
        "show_search": True,  # Search in applications and models names
        "show_all_applications": False,  # Dropdown with all applications and models
        "navigation": [
            {
                "title": _("Organization"),
                "separator": True,  # Top border
                "collapsible": True,  # Collapsible group of links
                "default_open": True,  # If collapsible, open on load
                "items": [
                    {
                        "title": _("Brugere"),
                        "icon": "person",  # Supported icon set: https://fonts.google.com/icons
                        "link": reverse_lazy("admin:organization_volunteer_changelist"),
                    },
                    {
                        "title": _("Teams"),
                        "icon": "people",
                        "link": reverse_lazy("admin:organization_team_changelist"),
                    },
                    {
                        "title": _("Events"),
                        "icon": "event",
                        "link": reverse_lazy("admin:organization_event_changelist"),
                    },

                ],
            },
        ],
    },
}
